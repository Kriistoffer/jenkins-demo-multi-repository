def yamlfile
def project_version
def jenkinsdemo_version
def jenkinsdemo2_version
def jenkinsdemo3_version

pipeline {
    agent any
    tools {
        nodejs "nodejs"
    }
    environment {
        baseUrl = "https://github.com/Kriistoffer"
        allRepositories = "jenkins-demo,jenkins-demo-2,jenkins-demo-3"
        demo1_commit = ""
    }
    stages {
        stage("Setup") {
            steps {
                script {
                    echo "Cleaning up..."
                    cleanWs()

                    if (!fileExists("logs")) {
                        sh "mkdir logs"
                    }
                    env.allRepositories.tokenize(",").each { repo -> 
                        sh "git clone ${env.baseUrl}/${repo}"
                    }

                    yamlfile = readYaml file: 'jenkins-demo-2/data.yaml'

                    if (env.demo1_commit != null || env.demo1_commit != "") {
                        dir("jenkins-demo-2") {
                            sh "git checkout ${env.demo1_commit}"

                            sh "git status"
                            sh "git branch"
                        }
                    }
                }
            }
        }
        stage("Reading YAML") {
            steps {
                script {
                    project_version = yamlfile.projectversion
                    jenkinsdemo_version = yamlfile.jenkinsdemo.version
                    jenkinsdemo2_version = yamlfile.jenkinsdemo2.version
                    jenkinsdemo3_version = yamlfile.jenkinsdemo3.version
                }
            }
        }
        stage("Collecting data") {
            steps {
                script {
                    sh "echo 'h1. PROJECT v.${project_version}' > ${WORKSPACE}/logs/project_${project_version}.txt"

                    dir("jenkins-demo/myapp/") {
                        sh "npm install"
                        sh "echo 'h3. Jenkinsdemo v.${jenkinsdemo_version}' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "npm audit > ${WORKSPACE}/logs/tmp.txt || true"
                        sh "sed -i '1,2d' ${WORKSPACE}/logs/tmp.txt"
                        sh "head -n -8 ${WORKSPACE}/logs/tmp.txt >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                    }

                    dir("jenkins-demo-2/") {
                        sh "npm install"
                        sh "echo 'h3. Jenkinsdemo2 v.${jenkinsdemo2_version}' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "npm audit > ${WORKSPACE}/logs/tmp.txt || true"
                        sh "sed -i '1,2d' ${WORKSPACE}/logs/tmp.txt"
                        sh "head -n -8 ${WORKSPACE}/logs/tmp.txt >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                    }

                    dir("jenkins-demo-3/mysecondapp/src/") {
                        sh "npm install"
                        sh "echo 'h3. Jenkinsdemo3 v.${jenkinsdemo3_version}' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "npm audit > ${WORKSPACE}/logs/tmp.txt || true"
                        sh "sed -i '1,2d' ${WORKSPACE}/logs/tmp.txt"
                        sh "head -n -8 ${WORKSPACE}/logs/tmp.txt >> ${WORKSPACE}/logs/project_${project_version}.txt"
                        sh "echo '\n' >> ${WORKSPACE}/logs/project_${project_version}.txt"
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                echo "success"
            }
        }
        failure {
            script {
                echo "failure"
            }
        }
        always {
            echo "Finished running."
        }
    }
}